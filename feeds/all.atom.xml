<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>kail.io</title><link href="http://ownthestack.com/" rel="alternate"></link><link href="http://ownthestack.com/feeds/all.atom.xml" rel="self"></link><id>http://ownthestack.com/</id><updated>2018-07-18T22:28:00-04:00</updated><entry><title>Projects</title><link href="http://ownthestack.com/projects.html" rel="alternate"></link><published>2018-07-18T22:28:00-04:00</published><updated>2018-07-18T22:28:00-04:00</updated><author><name>Andrew Kail</name></author><id>tag:ownthestack.com,2018-07-18:/projects.html</id><summary type="html">
        &lt;div class="row"&gt;
            &lt;div class="col-md-12"&gt;
                &lt;h2&gt;&lt;a href="https://hauberk.readthedocs.io/en/latest/index.html"&gt;Hauberk&lt;/a&gt;&lt;/h2&gt;
                &lt;p class="lead"&gt;
                An email automation framework.  Currently in Alpha status.
                &lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    </summary><content type="html">
        &lt;div class="row"&gt;
            &lt;div class="col-md-12"&gt;
                &lt;h2&gt;&lt;a href="https://hauberk.readthedocs.io/en/latest/index.html"&gt;Hauberk&lt;/a&gt;&lt;/h2&gt;
                &lt;p class="lead"&gt;
                An email automation framework.  Currently in Alpha status.
                &lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    </content></entry><entry><title>ModuleNotFoundError: No module named 'phd'</title><link href="http://ownthestack.com/modulenotfounderror-no-module-named-phd.html" rel="alternate"></link><published>2018-07-15T00:00:00-04:00</published><updated>2018-07-15T00:00:00-04:00</updated><author><name>Andrew Kail</name></author><id>tag:ownthestack.com,2018-07-15:/modulenotfounderror-no-module-named-phd.html</id><summary type="html">&lt;p&gt;Ok, after almost 5 years working and developing Python Codes. Its
time to go for a PhD.  This shouldn't be too hard, right?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;phd&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;phd&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Wait....&lt;/p&gt;
&lt;div class="d-flex justify-content-center inline-image" &gt;
&lt;iframe src="https://giphy.com/embed/2fs2I4ujlBf20" width="480" height="270" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Ergh.  I can't just keep importing things..&lt;/p&gt;
&lt;p&gt;So …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ok, after almost 5 years working and developing Python Codes. Its
time to go for a PhD.  This shouldn't be too hard, right?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;phd&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;phd&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Wait....&lt;/p&gt;
&lt;div class="d-flex justify-content-center inline-image" &gt;
&lt;iframe src="https://giphy.com/embed/2fs2I4ujlBf20" width="480" height="270" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Ergh.  I can't just keep importing things..&lt;/p&gt;
&lt;p&gt;So, you've somehow wandered over to
this blog and I would like to personally welcome you here.  This is going to be
a documentation of my journey towards a PhD while also working a full time job. &lt;/p&gt;
&lt;p&gt;So who am I? My name is Andrew Kail and I graduated from the University of Tennessee in 2011 and 2013 with a Bachelor and Masters degree
in Aerospace Engineering.  Currently I'm a Full Stack Engineer at Savannah River National 
Laboratory in South Carolina where I work in a computing group and am mostly
"The Python Guy".&lt;/p&gt;
&lt;p&gt;I'm starting a PhD after having worked at a National Lab for
5 years.  Why?  I ask myself that same question everytime I think about the start
of classes in a few weeks.  Its been on my mind for a while now and was a little bit when I was finishing
up my Masters.  At the time I was definitely not ready to continue my education from a maturity
and work ethic standpoint, and thankfully my advisor made sure I knew that. I also had no idea what
degree I would like to pursue or what I was even doing with my career really.  I was an Aerospace Engineer who
realized he was far more interested in programming and computing than building rockets and planes for NASA or SpaceX (I have
to admit, that recent &lt;a href="https://www.youtube.com/watch?v=wbSwFU6tY1c"&gt;SpaceX Launhc&lt;/a&gt; was pretty amazing). Given a few years
and self reflection, I started to consider the idea more and more, especially when I realized I could get it payed for by
work.  I had a few roadblocks though. I liked my job, couldn't find a program nearby in semi-rural South Carolina, and I just
didn't like the idea of doing a Computer Science PhD as that was all that I could find.&lt;/p&gt;
&lt;p&gt;Things took a turn in December when I discovered the &lt;a href="https://ualr.edu/online/programs/cis/"&gt;Information Science&lt;/a&gt; program 
at the University of Arkansas Little Rock.  It piqued my interest. It covered a lot of the topics I was interested in
such as data science, machine learning, information system architecture and visualization. It also allows me to work remotely
and the courses are held at reasonable hours so I could continue to work full time.
I was accepted into the program about a month ago and have been working to get everything taken care of.&lt;/p&gt;
&lt;p&gt;So, why the blog? I'll cover the why in more detail in another post so come back for more! As for what you can expect,
here are some of the things I will be trying to write about: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overall Progress&lt;/li&gt;
&lt;li&gt;Fun content to keep my spirits up&lt;/li&gt;
&lt;li&gt;Useful links&lt;/li&gt;
&lt;li&gt;Reading Recommendations&lt;/li&gt;
&lt;li&gt;Hopefully links and announcements on publications&lt;/li&gt;
&lt;li&gt;and General updates and frustrations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you read this and stick around I really appreciate and I hope we all can get something out of this.&lt;/p&gt;
&lt;p&gt;~ Andrew&lt;/p&gt;</content></entry><entry><title>Salty Pi's Part 2</title><link href="http://ownthestack.com/salty-pis-part-2.html" rel="alternate"></link><published>2018-06-22T00:00:00-04:00</published><updated>2018-06-22T00:00:00-04:00</updated><author><name>Andrew Kail</name></author><id>tag:ownthestack.com,2018-06-22:/salty-pis-part-2.html</id><summary type="html">&lt;h1&gt;Installing Salt&lt;/h1&gt;
&lt;p&gt;Installing Salt on a Raspberry Pi is pretty straightforward since there are up to date packages in the raspbian repositories.  For more details on installing Saltstack on any other platforms, please see the document &lt;a href="https://repo.saltstack.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install salt-minion salt-master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the hostname 'salt' to the &lt;code&gt;hosts&lt;/code&gt; file …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Installing Salt&lt;/h1&gt;
&lt;p&gt;Installing Salt on a Raspberry Pi is pretty straightforward since there are up to date packages in the raspbian repositories.  For more details on installing Saltstack on any other platforms, please see the document &lt;a href="https://repo.saltstack.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install salt-minion salt-master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the hostname 'salt' to the &lt;code&gt;hosts&lt;/code&gt; file so that it points to the salt-master.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.1.100 salt&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/hosts
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Restart the minion so that it connects to itself as the master&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;service salt-minion restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Master Key&lt;/h1&gt;
&lt;p&gt;list the keys&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;salt-key -L

salt-key -a pi-blue-01
salt-key -A
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;SLS files&lt;/h1&gt;
&lt;p&gt;Creating an sls files&lt;/p&gt;
&lt;p&gt;Etc /etc/salt/master on the master&lt;/p&gt;
&lt;p&gt;add /srv/salt as base directory&lt;/p&gt;
&lt;p&gt;Create a basic top.sls
create vim.sls&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;salt &amp;#39;*&amp;#39; state apply
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Basic Hardening&lt;/h1&gt;
&lt;p&gt;Now any new pi's I add to my home network will automatically become hardened once they are connected to the master.&lt;/p&gt;
&lt;p&gt;Setting up the SLS files.&lt;/p&gt;
&lt;h1&gt;what to do to add nother node&lt;/h1&gt;</content><category term="raspberry pi"></category><category term="salt"></category></entry><entry><title>Salty Pi's Part 1</title><link href="http://ownthestack.com/salty-pis-part-1.html" rel="alternate"></link><published>2018-05-13T00:00:00-04:00</published><updated>2018-05-13T00:00:00-04:00</updated><author><name>Andrew Kail</name></author><id>tag:ownthestack.com,2018-05-13:/salty-pis-part-1.html</id><summary type="html">&lt;p&gt;&lt;a href="https://saltstack.com"&gt;Saltstack&lt;/a&gt; is a remote execution engine and configuration management system built on top of Python and is very similar to tools like Puppet, Chef and Ansible.  I was first exposed to Salt when attending the Supercomputing conference in 2014 in New Orleans.  Since then I have started to make use …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://saltstack.com"&gt;Saltstack&lt;/a&gt; is a remote execution engine and configuration management system built on top of Python and is very similar to tools like Puppet, Chef and Ansible.  I was first exposed to Salt when attending the Supercomputing conference in 2014 in New Orleans.  Since then I have started to make use of Salt at work and have started to expand my usage to a small &lt;a href="https://reddit.com/r/homelab"&gt;homelab&lt;/a&gt;.  In the future I may take a look at some of these other configuration management tools, especially the ones that are built on Python like &lt;a href="http://ansible.com"&gt;Ansible&lt;/a&gt;.  My plan is to mess with Salt and some of its features at home in the hope I can translate some of this knowledge to work. It will help with setting up my home automation system and other projects I plan to do in the future.&lt;/p&gt;
&lt;p&gt;In this first post we will install raspbian on a Raspberry Pi 3 and perform some basic configuration.  A future posts will cover setting up and configuring Salt on the Pi.&lt;/p&gt;
&lt;h1&gt;Installing Raspbian&lt;/h1&gt;
&lt;p&gt;First thing to do is download and install the image from the Raspbian &lt;a href="https://www.raspberrypi.org/downloads/raspbian/"&gt;Download Page&lt;/a&gt;.  At the time of this writing Debian Stretch is the current version and for our purposes lets use the Lite version since this Pi's will be headless. Once downloaded we can verify the zip file by generating the sha256 check sum and then extract our image. Please take a moment to compare the hash generated here matches the has on the download page.  If it is wrong you should re-download the image.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sha256sum &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.img 
e942b70072f2e83c446b9de6f202eb8f9692c06e7d92c343361340cc016e0c9f &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.zip

$ unzip &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.zip
Archive:  &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.zip
  inflating: &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.img
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now copy the image to the SD card.  I prefer to use the &lt;code&gt;dd&lt;/code&gt; command as it doesn't require any dependencies and works pretty effeciently.  Just please make sure the &lt;code&gt;of&lt;/code&gt; option is pointing to the correct mount point as you do not want to overwrite an existing file system.  Most of the time an SD card will show up under &lt;code&gt;/dev/mm*&lt;/code&gt;, although in my case (running Manjaro) it showed up as &lt;code&gt;/dev/sdb&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.img &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once the image has been written a few edits need to be made to the image since ssh is not enabled by default. To enable the ssh server, create an empty file in the boot partition of the SD card which will enable the ssh server on boot. Just remount the SD card (may require a reboot) and look for the boot partition, which should be seperate from the root install, and create an empty file &lt;code&gt;ssh&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;somedirectory&amp;gt;/boot
$ sudo touch ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now its time to get the Pi up and running and do a few more tweaks.  Pop the SD card into the Pi and power it up.&lt;/p&gt;
&lt;h1&gt;Getting Raspbian Ready&lt;/h1&gt;
&lt;p&gt;With our Pi up and running, and connected to the network by ethernet, we will need to ssh into it. Before we can, we need to find out where it resides on the network. If you have the &lt;code&gt;nmap&lt;/code&gt; tool installed you can use it to scan your subnet for any devices.  For example if my subnet is 192.168.1.0, we can use the following to scan for all local devices.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nmap -sP &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24
    Host is up &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.099s latency&lt;span class="o"&gt;)&lt;/span&gt;.
    MAC Address: A1:A2:A2:A2:A2:A2 &lt;span class="o"&gt;(&lt;/span&gt;RASPBERRY PI FOUNDATION&lt;span class="o"&gt;)&lt;/span&gt;
    Nmap scan report &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="m"&gt;192&lt;/span&gt;.168.1.10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once we have found where the Pi is on the network lets go ahead and ssh into it. Remember the default username is &lt;code&gt;pi&lt;/code&gt; and the default password is &lt;code&gt;raspberry&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh pi@192.168.1.10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets Change the password before we go any further.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;password
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And lets update the system, set the hostname, give it a static ip address and restart.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo su - &lt;span class="c1"&gt;# go to root&lt;/span&gt;
$ apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get upgrade
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pi-blue-01&amp;quot;&lt;/span&gt; &amp;gt; /etc/hostname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To set a static ip address we need to edit &lt;code&gt;/etc/dhcpcd.conf&lt;/code&gt; for the interface.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;eth0&lt;/span&gt;
&lt;span class="kr"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;ip_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.100&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;
&lt;span class="kr"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;routers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;
&lt;span class="kr"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;domain_name_servers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now restart to make these changes take effect&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# while root&lt;/span&gt;
$ reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the next article we will get Salt installed and configured.&lt;/p&gt;</content><category term="raspberry pi"></category><category term="saltstack"></category><category term="raspbian"></category><category term="linux"></category></entry><entry><title>Whole Home Audio With PI's</title><link href="http://ownthestack.com/whole-home-audio-with-pis.html" rel="alternate"></link><published>2018-05-13T00:00:00-04:00</published><updated>2018-05-13T00:00:00-04:00</updated><author><name>Andrew Kail</name></author><id>tag:ownthestack.com,2018-05-13:/whole-home-audio-with-pis.html</id><summary type="html">&lt;p&gt;The hardware. &lt;/p&gt;
&lt;p&gt;Need an image of it&lt;/p&gt;
&lt;h1&gt;Installing Raspbian&lt;/h1&gt;
&lt;p&gt;First thing to do is download and install the image from the Raspbian &lt;a href="https://www.raspberrypi.org/downloads/raspbian/"&gt;Download Page&lt;/a&gt;.  At the time of this writing Debian Stretch is the current version and for our purposes lets use the Lite version since this Pi's will be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The hardware. &lt;/p&gt;
&lt;p&gt;Need an image of it&lt;/p&gt;
&lt;h1&gt;Installing Raspbian&lt;/h1&gt;
&lt;p&gt;First thing to do is download and install the image from the Raspbian &lt;a href="https://www.raspberrypi.org/downloads/raspbian/"&gt;Download Page&lt;/a&gt;.  At the time of this writing Debian Stretch is the current version and for our purposes lets use the Lite version since this Pi's will be headless. Once downloaded we can verify the zip file by generating the sha256 check sum and then extract our image. Please take a moment to compare the hash generated here matches the has on the download page.  If it is wrong you should re-download the image.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sha256sum &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.img 
e942b70072f2e83c446b9de6f202eb8f9692c06e7d92c343361340cc016e0c9f &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.zip

$ unzip &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.zip
Archive:  &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.zip
  inflating: &lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.img
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now copy the image to the SD card.  I prefer to use the &lt;code&gt;dd&lt;/code&gt; command as it doesn't require any dependencies and works pretty effeciently.  Just please make sure the &lt;code&gt;of&lt;/code&gt; option is pointing to the correct mount point as you do not want to overwrite an existing file system.  Most of the time an SD card will show up under &lt;code&gt;/dev/mm*&lt;/code&gt;, although in my case (running Manjaro) it showed up as &lt;code&gt;/dev/sdb&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo dd &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-11-29-raspbian-stretch-lite.img &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once the image has been written a few edits need to be made to the image since ssh is not enabled by default. To enable the ssh server, create an empty file in the boot partition of the SD card which will enable the ssh server on boot. Just remount the SD card (may require a reboot) and look for the boot partition, which should be seperate from the root install, and create an empty file &lt;code&gt;ssh&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;somedirectory&amp;gt;/boot
$ sudo touch ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now its time to get the Pi up and running and do a few more tweaks.  Pop the SD card into the Pi and power it up.&lt;/p&gt;
&lt;h1&gt;Configuring wireless&lt;/h1&gt;
&lt;p&gt;Should be able to do this before I fire up the pi&lt;/p&gt;
&lt;p&gt;edit /etc/wpa_supplicant/wpa_supplicant.conf and add a configuration for the network&lt;/p&gt;
&lt;p&gt;Add the following to the file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;network={
    ssid=&amp;quot;MyWirelessnetwork&amp;quot;
    psk=&amp;quot;igotasecret&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and add this to /etc/dhcpcd.conf if you want a static ip address set for the new interface&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;wlan0&lt;/span&gt;
&lt;span class="kr"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;ip_address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;2.201&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;
&lt;span class="kr"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;routers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;
&lt;span class="kr"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;domain_name_servers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;192.168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Install snapcast&lt;/h1&gt;
&lt;p&gt;What is snapcast?  Well, glad you asked&lt;/p&gt;
&lt;p&gt;install client and server using wget,dpkg and &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get -f install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to fix any issues with dependencies&lt;/p&gt;
&lt;p&gt;Configuration for server at /etc/defaults/snapserver&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SNAPSERVER_OPTS=&amp;quot;-d -s pipe:///tmp/snapfifo?name=Radio&amp;amp;mode=read&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;be sure to restart the server&lt;/p&gt;
&lt;p&gt;to fix and issue with where the audio is going&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;amixer cset numid=3 1
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Install Shairport&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install shairport-sync
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;configure&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;general =
{
    name = &amp;quot;Front Room&amp;quot;;
    password = &amp;quot;secret&amp;quot;;
    interpolation = &amp;quot;soxr&amp;quot;;
};
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Turn on and configure bluetooth&lt;/h1&gt;
&lt;p&gt;the a2dp needs to run with sudo privileges&lt;/p&gt;
&lt;p&gt;maybe add pi user to bluetooth group?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;adduser pi bluetooth
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Testing&lt;/h1&gt;
&lt;p&gt;connect an iphone and it should work!
it did for me after all&lt;/p&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;p&gt;https://www.makeuseof.com/tag/setup-wi-fi-bluetooth-raspberry-pi-3/
https://gist.github.com/mill1000/74c7473ee3b4a5b13f6325e9994ff84c
shairport-sync github page
snapcast page
https://github.com/badaix/snapcast/blob/master/doc/player_setup.md#alsa
https://github.com/raspberrypi/linux/issues/1402
https://github.com/badaix/snapcast/issues/379
https://github.com/BaReinhard/Super-Simple-Raspberry-Pi-Audio-Receiver-Install&lt;/p&gt;</content><category term="raspberry pi"></category><category term="raspbian"></category><category term="linux"></category><category term="automation"></category></entry></feed>